(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const a of s)if(a.type==="childList")for(const i of a.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&o(i)}).observe(document,{childList:!0,subtree:!0});function l(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerPolicy&&(a.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?a.credentials="include":s.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function o(s){if(s.ep)return;s.ep=!0;const a=l(s);fetch(s.href,a)}})();function te(e){const t=document.getElementById(tabs[e]);t.style.display==="block"?t.style.display="none":document.getElementById(tabs[e]).style.display="block",Object.keys(tabs).filter(o=>o!=e).forEach(o=>{document.getElementById(tabs[o]).style.display="none"})}function le(e){const t=document.getElementById(sections[e]),l=document.getElementById(`${e}ChevronIcon`);t.classList.toggle("hidden"),t.classList.contains("hidden")?l.classList.remove("rotate-180"):l.classList.add("rotate-180")}function oe(e,t){const l=document.getElementById(e);l.classList.contains("hidden")?t.classList.replace("mt-10","mt-2"):(t.classList.replace("mt-2","mt-10"),l.scrollIntoView({behavior:"smooth",block:"start"}))}const se=Object.freeze(Object.defineProperty({__proto__:null,createGap:oe,showCurrentSection:le,showCurrentTab:te},Symbol.toStringTag,{value:"Module"})),re={panda:1100,turtle:800,red_panda:1700,pony:800,penguin:800},ae={AWvSolo:"aw-vs-solo",Profit:"profit-calculator",Boxes:"boxes",ClubRewards:"club-rewards",Changelog:"changelog"},N={xpTable:"xpTable",club:"club-desc",awvsolo:"awvsolo-desc",profit:"profit-desc",clubGoal:"clubGoal"},R={club:"clubSection",profit:"profitSection",awvsolo:"awvsoloSection"},A={"profit-desc":`This is a calculator for calculating how much profit multiplier you would get in each dish.
                    For example, a worker selling a $90 dish would profit $720k if the multipliers times the dish by 8000x.
                    Keep in mind this calculator is not completely accurate and it can be a little off (further research is needed).
                    However, it gives an idea of your possible profit multiplier. 
                    For club multipliers, please put that as your remote to include it in a more accurate measurement.`,"awvsolo-desc":`This is a calculator for calculating percentages from all workers and solo workers.
                    When combining all workers and solo workers, the percentages are multiplicative rather than addictive.
                    This research can be found in this 
                    <a class="text-blue-400 underline hover:no-underline" href="https://www.reddit.com/r/eatventureofficial/comments/14kq5xa/demonstration_that_personal_and_all_worker/">reddit post</a>.
                    Be sure to join the discord community for more guides, theories, and proven research.`,"club-desc":`This is a lookup tool where you figure out how much exp you need for each level as a club or average per person, 
                or even calculate the amount of rewards gained. 
                The reward calculator may be subject to change as the game goes on.
                A Club XP rewards and a reference chart is provided. The data and formulas were taken from:
                <a class="text-blue-400 underline hover:no-underline" href="https://docs.google.com/spreadsheets/d/e/2PACX-1vSV4ou9YZ1NgCYkT4Tr__sq6PHN6YsPyQuUh-Pryw98hQiEkCwcbUhoPXAB2pPGynuBIAjcyc7A86zv/pubhtml#">Eatventure's handbook</a>
                made by <span class="text-[#00b3b3]">fallen_spectre</span> and <span class="text-[#00b3b3]">BladedCross</span>. The calculations can be seen from <a class="text-blue-400 underline hover:no-underline" href="https://docs.google.com/spreadsheets/d/1b79jTHCbbLnLLWFgrCdxYWqDgt2msgrFqUMaBR3XSYo/edit?gid=607690110#gid=607690110"> EV Multipurpose Calculator</a>`},H={lvl1:{xp:0,totalXP:0,reward:"N/A"},lvl2:{xp:150,totalXP:150,reward:"2 Small Boxes"},lvl3:{xp:200,totalXP:350,reward:"1.05x Multiplier"},lvl4:{xp:300,totalXP:650,reward:"150 Gems"},lvl5:{xp:450,totalXP:1100,reward:"75 Petfood"},lvl6:{xp:650,totalXP:1750,reward:"1.1x Multiplier"},lvl7:{xp:900,totalXP:2650,reward:"12 Small Boxes"},lvl8:{xp:1240,totalXP:3890,reward:"600 Gems"},lvl9:{xp:1570,totalXP:5460,reward:"1.15x Multiplier"},lvl10:{xp:1890,totalXP:7350,reward:"2 Club Boxes"},lvl11:{xp:2200,totalXP:9550,reward:"350 Petfood"},lvl12:{xp:2500,totalXP:12050,reward:"6 Big Boxes"},lvl13:{xp:2790,totalXP:14840,reward:"1.2x Multiplier"},lvl14:{xp:3070,totalXP:17910,reward:"1.6k Gems"},lvl15:{xp:3340,totalXP:21250,reward:"500 Petfood"},lvl16:{xp:3600,totalXP:24850,reward:"1.25x Multiplier"},lvl17:{xp:3850,totalXP:28700,reward:"9 Big Boxes"},lvl18:{xp:4090,totalXP:32790,reward:"2.1k Gems"},lvl19:{xp:4320,totalXP:37110,reward:"1.3x Multiplier"},lvl20:{xp:4540,totalXP:41650,reward:"3 Club Boxes"},lvl21:{xp:4750,totalXP:46400,reward:"700 Petfood"},lvl22:{xp:4950,totalXP:51350,reward:"1 Epic Egg"},lvl23:{xp:5140,totalXP:56490,reward:"1.35x Multiplier"},lvl24:{xp:5320,totalXP:61810,reward:"2.5k Gems"},lvl25:{xp:5490,totalXP:67300,reward:"12 Big Boxes"},lvl26:{xp:5650,totalXP:72950,reward:"1.4x Multiplier"},lvl27:{xp:5800,totalXP:78750,reward:"800 Petfood"},lvl28:{xp:5940,totalXP:84690,reward:"2.75k Gems"},lvl29:{xp:6070,totalXP:90760,reward:"1.45x Multiplier"},lvl30:{xp:6190,totalXP:96950,reward:"4 Club Boxes"},lvl31:{xp:6300,totalXP:103250,reward:"900 Petfood"},lvl32:{xp:6400,totalXP:109650,reward:"3k Gems"},lvl33:{xp:6500,totalXP:116150,reward:"1.5x Multiplier"},lvl34:{xp:6600,totalXP:122750,reward:"15 Big Boxes"},lvl35:{xp:6700,totalXP:129450,reward:"2 Epic Eggs"},lvl36:{xp:6800,totalXP:136250,reward:"1.55x Multiplier"},lvl37:{xp:6900,totalXP:143150,reward:"3.25k Gems"},lvl38:{xp:7e3,totalXP:150150,reward:"1000 Petfood"},lvl39:{xp:7100,totalXP:157250,reward:"1.6x Multiplier"},lvl40:{xp:7200,totalXP:164450,reward:"6 Club Boxes"},lvl41:{xp:7300,totalXP:171750,reward:"3.5k Gems"},lvl42:{xp:7400,totalXP:179150,reward:"1.7x Multiplier"},lvl43:{xp:7500,totalXP:186650,reward:"18 Big Boxes"},lvl44:{xp:7600,totalXP:194250,reward:"1150 Petfood"},lvl45:{xp:7700,totalXP:201950,reward:"1.8x Multiplier"},lvl46:{xp:7800,totalXP:209750,reward:"3.75k Gems"},lvl47:{xp:7900,totalXP:217650,reward:"20 Big Boxes"},lvl48:{xp:8e3,totalXP:225650,reward:"2x Multiplier"},lvl49:{xp:8100,totalXP:233750,reward:"1250 Petfood"},lvl50:{xp:8200,totalXP:241950,reward:"8 Club Boxes"}};let ne=0,ie=0,ce=0,de=0,ue=0,pe=0,me=0;const E={gems:/(\d+(?:\.\d+)?k?)\s*Gems/i,petFood:/(\d+(?:\.\d+)?k?)\s*Petfood/i,other:/(\d+)?\s*(Small|Big|Club)\s*Boxes|(\d+)?\s*Epic\s*Egg/i},ge=Object.freeze(Object.defineProperty({__proto__:null,bigBoxes:de,clubBoxes:ue,clubLvls:H,descriptions:A,epicEggs:pe,petBonuses:re,regex_patterns:E,sectionPlaceholder:R,sections:N,smallBoxes:ce,tabs:ae,totalGems:ne,totalMultiplier:me,totalPetfood:ie},Symbol.toStringTag,{value:"Module"}));function xe(){const e=parseFloat(document.getElementById("awPercent").value),t=parseFloat(document.getElementById("soloPercent").value);if(isNaN(e)||isNaN(t)){document.getElementById("aw-solo-result").innerText="Please enter valid percentages.";return}const l=((1+e/100)*(1+t/100)-1)*100;document.getElementById("aw-solo-result").innerText=`Result: ${l.toFixed(2)}%`}function fe(){const e=parseFloat(document.getElementById("apPercent").value),t=parseFloat(document.getElementById("remoteMultiplier").value),l=document.getElementById("petSelect").value,o=document.getElementById("perfect").value.toLowerCase(),s=document.getElementById("divinity").value.toLowerCase(),a=document.getElementById("2x").value.toLowerCase();if(isNaN(e)||isNaN(t)||!petBonuses[l]){document.getElementById("profit-result").innerText="Please enter valid values.";return}const i=petBonuses[l],c=o==="yes"?6:1,d=s==="yes"?25:1,n=a==="yes"?2:1,p=e/100*(i/100)*c*d*t*n;document.getElementById("profit-result").innerText=`Profit Multiplier: ${p.toFixed(2)}x`}function ve(){const e=Number(document.getElementById("level-search").value),t=document.getElementById("level-result");if(e===0){t.innerText="";return}if(e<1||e>50){t.classList.replace("text-[#00b3b3]","text-red-400"),t.innerText="Invalid level. Valid level range is 1-50";return}t.classList.replace("text-red-400","text-[#00b3b3]");const l=clubLvlsArray.find(([u])=>u===`lvl${e}`),{totalGems:o,totalPetfood:s,smallBoxes:a,bigBoxes:i,clubBoxes:c,epicEggs:d,totalMultiplier:n}=M(clubLvlsArray,e,!0),p=u=>u>=1e3?(u/1e3).toFixed(2)+"k":u,r=[];a&&r.push(`${a} Small Boxes`),i&&r.push(`${i} Big Boxes`),c&&r.push(`${c} Club Boxes`),d&&r.push(`${d} Epic Egg${d>1?"s":""}`),o&&r.push(`${p(o)} Gems`),s&&r.push(`${p(s)} Petfood`),n&&r.push(`${n}x Total Multiplier`);const v=r.length?r.map(u=>`<li class="text-white font-light mb-1">${u}</li>`).join(""):'<li class="text-white font-light">None</li>';t.innerHTML=` 
        <p>XP required for level up: </p> 
        <p class="mb-4"><span class='text-white font-light'>${l[1].xp}</span></p>
        <p>Total XP needed:</p>
        <p class="mb-4"><span class='text-white font-light'>${l[1].totalXP}</span></p>
        <p>Average XP per player:</p>
        <p class="mb-4"><span class='text-white font-light'>${l[1].totalXP/10}</span></p>
        <p>Current Level Reward:</p>
        <p class="mb-4"><span class='text-white font-light'>${l[1].reward}</span></p>
        <p>All Rewards Met: </p>
        <ul class="md:w-1/3 list-disc pl-6 mt-2 mb-4 grid grid-cols-2 md:grid-cols-3">
            ${v}
        </ul>
    `}function M(e,t,l){let o=0,s=0,a=0,i=0,c=0,d=0,n=0;return e.filter(([r])=>{const v=parseInt(r.replace("lvl",""));return l?v<t+1:v}).map(r=>r[1]).forEach(r=>{if(!r.reward)return;r.reward.split(",").map(u=>u.trim()).forEach(u=>{if(u.includes("x Multiplier")){const x=u.split("x Multiplier")[0].trim(),y=parseFloat(x);isNaN(y)||(n=+y)}const h=u.match(E.gems);if(h){let x=h[1];x.endsWith("k")&&(x=parseFloat(x)*1e3),o+=parseFloat(x);return}const m=u.match(E.petFood);if(m){let x=m[1];x.endsWith("k")&&(x=parseFloat(x)*1e3),s+=parseFloat(x);return}const b=u.match(E.other);if(b){let x=b[1]?parseInt(b[1]):b[3]?parseInt(b[3]):1;/Small\s*Box/i.test(u)?a+=x:/Big\s*Box/i.test(u)?i+=x:/Club\s*Box/i.test(u)?c+=x:/Epic\s*Egg/i.test(u)&&(d+=x)}})}),{totalGems:o,totalPetfood:s,smallBoxes:a,bigBoxes:i,clubBoxes:c,epicEggs:d,totalMultiplier:n}}function he(){let e=Number(document.getElementById("current-level").value);const t=Number(document.getElementById("target-level").value),l=document.getElementById("current-level-error"),o=document.getElementById("target-level-error");e<1|e>50&&(l.innerText="Level must be from 1-50"),t<1|t>50&&(o.innerText="Level must be from 1-50");const s=document.getElementById("totalXP");let a=clubLvlsArray.find(([g])=>g===`lvl${e}`),i=a[1].xp;const c=a[1].totalXP,d=c-i;let n=c-1;e===1&&(n=c),console.log("Final XP for current level:",i);const p=clubLvlsArray.filter(([g])=>{const w=parseInt(g.replace("lvl",""));return w>e&&w<=t});let r=p.map(([g,w])=>w.xp);const{totalGems:v,totalPetfood:u,smallBoxes:h,bigBoxes:m,clubBoxes:b,epicEggs:x,totalMultiplier:y}=M(p,t,!1),P=g=>g>=1e3?(g/1e3).toFixed(2)+"k":g,f=[];h&&f.push(`${h} Small Boxes`),m&&f.push(`${m} Big Boxes`),b&&f.push(`${b} Club Boxes`),x&&f.push(`${x} Epic Egg${x>1?"s":""}`),v&&f.push(`${P(v)} Gems`),u&&f.push(`${P(u)} Petfood`),y&&f.push(`${y}x Total Multiplier`);const T=f.length?f.map(g=>`<li class="text-white font-light mb-1">${g}</li>`).join(""):'<li class="text-white font-light">None</li>',B=r.reduce((g,w)=>g+w,0);s.innerHTML=`
        <p>Your Club's Total XP</p> 
        <p class="mb-5"><span class='text-white font-light'>${d} - ${n}</span></p>
        <p>XP required <span class="text-white">(Level ${e} -> ${t})</span></p>
        <p class="mb-5"><span class='text-white font-light'>${B}</span></p>
        <p>Average XP Per Person Required <span class="text-white">(Level ${e} -> ${t})</span></p>
        <p class="mb-5"><span class='text-white font-light'>${B/10}</span></p>
        <p>Rewards Gained <span class="text-white">(Level ${e} -> ${t})</span></p> 
        <p class="mb-1"><span class='text-white font-light'>${T}</span></p>
    `}const be=Object.freeze(Object.defineProperty({__proto__:null,calculateAWvsSolo:xe,calculateProfit:fe,calculateRewards:M,calculateXPTotal:he,levelSearch:ve},Symbol.toStringTag,{value:"Module"})),V={"v0.1.0":{title:"Initial Release",date:"11/24/2024",url:"https://github.com/AtlasWiki/ev/releases/tag/v0.1.0"},"v0.2.0":{title:"Club Rewards",date:"11/25/2024",url:"https://github.com/AtlasWiki/ev/releases/tag/v0.2.0"},"v0.3.0":{title:"Accessibility and Bug fixes",date:"11/25/2024",url:"https://github.com/AtlasWiki/ev/releases/tag/v0.3.0"}};function we(){const e=document.getElementById("changelog-item"),t=Object.entries(V).map(([l,o])=>`
        <div class="mt-1">
           <a href="${o.url}" class="text-blue-400 underline hover:no-underline">
                ${l} - ${o.title} (${o.date})
           </a>
        </div>
    `).join("");e.innerHTML=t}const ye=Object.freeze(Object.defineProperty({__proto__:null,changelog:V,createLog:we},Symbol.toStringTag,{value:"Module"})),W=Object.entries(H),Pe=Object.entries(N),Be=Object.entries(A);function Ee(e){(Array.isArray(e)?e:[e]).forEach(l=>{let o=document.getElementById(l);o&&(o.innerHTML="",o.value="")})}const Xe=Object.freeze(Object.defineProperty({__proto__:null,clearValue:Ee,clubLvlsArray:W,descriptionItems:Be,sectionItems:Pe},Symbol.toStringTag,{value:"Module"})),k=document.getElementById("table-body-1"),C=document.getElementById("table-body-2");function $e(){alert("test")}function $(){const t=document.getElementById("clubRewards").value,l=Number(document.getElementById("min-level-input").value),o=Number(document.getElementById("max-level-input").value);return W.filter(([s,a])=>{let i=a.reward;const c=parseInt(s.match(/\d+/)[0]),d=c>=l&&c<=o;return i.includes(t)&&d?!0:!!(t==="All"&&d)})}function _(e,t){const l=document.createElement("tr"),o=`<td class="md:py-4 py-2 px-1">${e.replace("lvl","")}</td>`,s=`<td class="md:py-4 py-2 px-1">${t.xp}</td>`,a=`<td class="md:py-4 py-2 px-1">${t.totalXP}</td>`,i=`<td class="md:py-4 py-2 px-1">${t.reward}</td>`;return l.innerHTML=o+s+a+i,l}function q(){k.innerHTML="",C.innerHTML="";const e=$(),t=1,l=document.getElementById("min-level-input");l.min=t;const o=document.getElementById("max-level-input");o.min=t,Y();const s=Math.ceil(e.length/2),a=e.slice(0,s),i=e.slice(s);a.forEach(([c,d])=>{const n=_(c,d);k.appendChild(n)}),i.forEach(([c,d])=>{const n=_(c,d);C.appendChild(n)}),z()}q();function z(){const e=document.getElementById("club-entry-result"),{totalGems:t,totalPetfood:l,smallBoxes:o,bigBoxes:s,clubBoxes:a,epicEggs:i,totalMultiplier:c}=M($(),$(),!1),d=r=>r>=1e3?(r/1e3).toFixed(1)+"k":r,n=[];o&&n.push(`${o} Small Boxes`),s&&n.push(`${s} Big Boxes`),a&&n.push(`${a} Club Boxes`),i&&n.push(`${i} Epic Egg${i>1?"s":""}`),t&&n.push(`${d(t)} Gems`),l&&n.push(`${d(l)} Petfood`),c&&n.push(`${c}x Total Multiplier`);const p=n.length?n.map(r=>`<li class="text-white font-light mb-1">${r}</li>`).join(""):'<li class="text-white font-light">None</li>';e.innerHTML=` 
        <p class="text-[#00b3b3] font-semibold">Total Rewards: </p>
        <ul class="md:w-1/3 list-disc pl-6 mt-2 mb-4 grid grid-cols-2 md:grid-cols-3">
            ${p}
        </ul>
    `}function Ie(e,t){const l=document.getElementById(e),o=t.value;l.innerText=o}function Y(){const e=document.getElementById("min-level-range"),t=document.getElementById("max-level-range"),l=document.getElementById("min-level-input").value,o=document.getElementById("max-level-input").value;e.innerText=l,t.innerText=o}function Me(e){const t=N[e],l=R[e],o=document.getElementById(l),s=A[t];o.innerHTML=`
        <div>
            <button onclick="showCurrentSection('${e}')" class="bg-[#3a3a3a] hover:bg-[#4b4b4b] transition-all duration-300 w-full p-2 md:p-5 font-semibold text-xl rounded-md flex items-center justify-between">
                <div class="flex justify-center items-center gap-2">
                    <svg id="${e}ChevronIcon" class="rotate-180 w-6 h-6 transform transition-transform duration-300" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M19 9l-7 7-7-7" />
                    </svg>
                    <span>Description</span>
                </div>
            </button>

            <section id="${t}" class="mt-2 p-2 mb-5">
                <p class="leading-8 text-md md:w-3/4">
                    ${s}
                </p>
            </section>
        </div>
    `}const Le=Object.freeze(Object.defineProperty({__proto__:null,createDescription:Me,createRow:_,displayTableResult:z,filterEntries:$,initialLevelRangeValueUpdate:Y,tableBody1:k,tableBody2:C,test2:$e,updateLevelRangeValue:Ie,updateTables:q},Symbol.toStringTag,{value:"Module"})),Te=[se,be,ge,ye,Xe,Le];Te.forEach(e=>{Object.keys(e).forEach(t=>{window[t]=e[t]})});(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))l(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&l(a)}).observe(document,{childList:!0,subtree:!0});function t(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function l(o){if(o.ep)return;o.ep=!0;const s=t(o);fetch(o.href,s)}})();function ke(e){const t=document.getElementById(tabs[e]);t.style.display==="block"?t.style.display="none":document.getElementById(tabs[e]).style.display="block",Object.keys(tabs).filter(l=>l!=e).forEach(l=>{document.getElementById(tabs[l]).style.display="none"})}function Ce(e){const t=document.getElementById(sections[e]),l=document.getElementById(`${e}ChevronIcon`);t.classList.toggle("hidden"),t.classList.contains("hidden")?l.classList.remove("rotate-180"):l.classList.add("rotate-180")}function _e(e,t){const l=document.getElementById(e);l.classList.contains("hidden")?t.classList.replace("mt-10","mt-2"):(t.classList.replace("mt-2","mt-10"),l.scrollIntoView({behavior:"smooth",block:"start"}))}const Se=Object.freeze(Object.defineProperty({__proto__:null,createGap:_e,showCurrentSection:Ce,showCurrentTab:ke},Symbol.toStringTag,{value:"Module"})),je={panda:1100,turtle:800,red_panda:1700,pony:800,penguin:800},Ge={AWvSolo:"aw-vs-solo",Profit:"profit-calculator",Boxes:"boxes",ClubRewards:"club-rewards",Changelog:"changelog"},O={xpTable:"xpTable",club:"club-desc",awvsolo:"awvsolo-desc",profit:"profit-desc",clubGoal:"clubGoal"},U={club:"clubSection",profit:"profitSection",awvsolo:"awvsoloSection"},F={"profit-desc":`This is a calculator for calculating how much profit multiplier you would get in each dish.
                    For example, a worker selling a $90 dish would profit $720k if the multipliers times the dish by 8000x.
                    Keep in mind this calculator is not completely accurate and it can be a little off (further research is needed).
                    However, it gives an idea of your possible profit multiplier. 
                    For club multipliers, please put that as your remote to include it in a more accurate measurement.`,"awvsolo-desc":`This is a calculator for calculating percentages from all workers and solo workers.
                    When combining all workers and solo workers, the percentages are multiplicative rather than addictive.
                    This research can be found in this 
                    <a class="text-blue-400 underline hover:no-underline" href="https://www.reddit.com/r/eatventureofficial/comments/14kq5xa/demonstration_that_personal_and_all_worker/">reddit post</a>.
                    Be sure to join the discord community for more guides, theories, and proven research.`,"club-desc":`This is a lookup tool where you figure out how much exp you need for each level as a club or average per person, 
                or even calculate the amount of rewards gained. 
                The reward calculator may be subject to change as the game goes on.
                A Club XP rewards and a reference chart is provided. The data and formulas were taken from:
                <a class="text-blue-400 underline hover:no-underline" href="https://docs.google.com/spreadsheets/d/e/2PACX-1vSV4ou9YZ1NgCYkT4Tr__sq6PHN6YsPyQuUh-Pryw98hQiEkCwcbUhoPXAB2pPGynuBIAjcyc7A86zv/pubhtml#">Eatventure's handbook</a>
                made by <span class="text-[#00b3b3]">fallen_spectre</span> and <span class="text-[#00b3b3]">BladedCross</span>. The calculations can be seen from <a class="text-blue-400 underline hover:no-underline" href="https://docs.google.com/spreadsheets/d/1b79jTHCbbLnLLWFgrCdxYWqDgt2msgrFqUMaBR3XSYo/edit?gid=607690110#gid=607690110"> EV Multipurpose Calculator</a>`},D={lvl1:{xp:0,totalXP:0,reward:"N/A"},lvl2:{xp:150,totalXP:150,reward:"2 Small Boxes"},lvl3:{xp:200,totalXP:350,reward:"1.05x Multiplier"},lvl4:{xp:300,totalXP:650,reward:"150 Gems"},lvl5:{xp:450,totalXP:1100,reward:"75 Petfood"},lvl6:{xp:650,totalXP:1750,reward:"1.1x Multiplier"},lvl7:{xp:900,totalXP:2650,reward:"12 Small Boxes"},lvl8:{xp:1240,totalXP:3890,reward:"600 Gems"},lvl9:{xp:1570,totalXP:5460,reward:"1.15x Multiplier"},lvl10:{xp:1890,totalXP:7350,reward:"2 Club Boxes"},lvl11:{xp:2200,totalXP:9550,reward:"350 Petfood"},lvl12:{xp:2500,totalXP:12050,reward:"6 Big Boxes"},lvl13:{xp:2790,totalXP:14840,reward:"1.2x Multiplier"},lvl14:{xp:3070,totalXP:17910,reward:"1.6k Gems"},lvl15:{xp:3340,totalXP:21250,reward:"500 Petfood"},lvl16:{xp:3600,totalXP:24850,reward:"1.25x Multiplier"},lvl17:{xp:3850,totalXP:28700,reward:"9 Big Boxes"},lvl18:{xp:4090,totalXP:32790,reward:"2.1k Gems"},lvl19:{xp:4320,totalXP:37110,reward:"1.3x Multiplier"},lvl20:{xp:4540,totalXP:41650,reward:"3 Club Boxes"},lvl21:{xp:4750,totalXP:46400,reward:"700 Petfood"},lvl22:{xp:4950,totalXP:51350,reward:"1 Epic Egg"},lvl23:{xp:5140,totalXP:56490,reward:"1.35x Multiplier"},lvl24:{xp:5320,totalXP:61810,reward:"2.5k Gems"},lvl25:{xp:5490,totalXP:67300,reward:"12 Big Boxes"},lvl26:{xp:5650,totalXP:72950,reward:"1.4x Multiplier"},lvl27:{xp:5800,totalXP:78750,reward:"800 Petfood"},lvl28:{xp:5940,totalXP:84690,reward:"2.75k Gems"},lvl29:{xp:6070,totalXP:90760,reward:"1.45x Multiplier"},lvl30:{xp:6190,totalXP:96950,reward:"4 Club Boxes"},lvl31:{xp:6300,totalXP:103250,reward:"900 Petfood"},lvl32:{xp:6400,totalXP:109650,reward:"3k Gems"},lvl33:{xp:6500,totalXP:116150,reward:"1.5x Multiplier"},lvl34:{xp:6600,totalXP:122750,reward:"15 Big Boxes"},lvl35:{xp:6700,totalXP:129450,reward:"2 Epic Eggs"},lvl36:{xp:6800,totalXP:136250,reward:"1.55x Multiplier"},lvl37:{xp:6900,totalXP:143150,reward:"3.25k Gems"},lvl38:{xp:7e3,totalXP:150150,reward:"1000 Petfood"},lvl39:{xp:7100,totalXP:157250,reward:"1.6x Multiplier"},lvl40:{xp:7200,totalXP:164450,reward:"6 Club Boxes"},lvl41:{xp:7300,totalXP:171750,reward:"3.5k Gems"},lvl42:{xp:7400,totalXP:179150,reward:"1.7x Multiplier"},lvl43:{xp:7500,totalXP:186650,reward:"18 Big Boxes"},lvl44:{xp:7600,totalXP:194250,reward:"1150 Petfood"},lvl45:{xp:7700,totalXP:201950,reward:"1.8x Multiplier"},lvl46:{xp:7800,totalXP:209750,reward:"3.75k Gems"},lvl47:{xp:7900,totalXP:217650,reward:"20 Big Boxes"},lvl48:{xp:8e3,totalXP:225650,reward:"2x Multiplier"},lvl49:{xp:8100,totalXP:233750,reward:"1250 Petfood"},lvl50:{xp:8200,totalXP:241950,reward:"8 Club Boxes"}};let Ne=0,Ae=0,Oe=0,Fe=0,Re=0,He=0,Ve=0;const X={gems:/(\d+(?:\.\d+)?k?)\s*Gems/i,petFood:/(\d+(?:\.\d+)?k?)\s*Petfood/i,other:/(\d+)?\s*(Small|Big|Club)\s*Boxes|(\d+)?\s*Epic\s*Egg/i},We=Object.freeze(Object.defineProperty({__proto__:null,bigBoxes:Fe,clubBoxes:Re,clubLvls:D,descriptions:F,epicEggs:He,petBonuses:je,regex_patterns:X,sectionPlaceholder:U,sections:O,smallBoxes:Oe,tabs:Ge,totalGems:Ne,totalMultiplier:Ve,totalPetfood:Ae},Symbol.toStringTag,{value:"Module"}));function qe(){const e=parseFloat(document.getElementById("awPercent").value),t=parseFloat(document.getElementById("soloPercent").value);if(isNaN(e)||isNaN(t)){document.getElementById("aw-solo-result").innerText="Please enter valid percentages.";return}const l=((1+e/100)*(1+t/100)-1)*100;document.getElementById("aw-solo-result").innerText=`Result: ${l.toFixed(2)}%`}function ze(){const e=parseFloat(document.getElementById("apPercent").value),t=parseFloat(document.getElementById("remoteMultiplier").value),l=document.getElementById("petSelect").value,o=document.getElementById("perfect").value.toLowerCase(),s=document.getElementById("divinity").value.toLowerCase(),a=document.getElementById("2x").value.toLowerCase();if(isNaN(e)||isNaN(t)||!petBonuses[l]){document.getElementById("profit-result").innerText="Please enter valid values.";return}const i=petBonuses[l],c=o==="yes"?6:1,d=s==="yes"?25:1,n=a==="yes"?2:1,p=e/100*(i/100)*c*d*t*n;document.getElementById("profit-result").innerText=`Profit Multiplier: ${p.toFixed(2)}x`}function Ye(){const e=Number(document.getElementById("level-search").value),t=document.getElementById("level-result");if(e===0){t.innerText="";return}if(e<1||e>50){t.classList.replace("text-[#00b3b3]","text-red-400"),t.innerText="Invalid level. Valid level range is 1-50";return}t.classList.replace("text-red-400","text-[#00b3b3]");const l=clubLvlsArray.find(([u])=>u===`lvl${e}`),{totalGems:o,totalPetfood:s,smallBoxes:a,bigBoxes:i,clubBoxes:c,epicEggs:d,totalMultiplier:n}=L(clubLvlsArray,e,!0),p=u=>u>=1e3?(u/1e3).toFixed(2)+"k":u,r=[];a&&r.push(`${a} Small Boxes`),i&&r.push(`${i} Big Boxes`),c&&r.push(`${c} Club Boxes`),d&&r.push(`${d} Epic Egg${d>1?"s":""}`),o&&r.push(`${p(o)} Gems`),s&&r.push(`${p(s)} Petfood`),n&&r.push(`${n}x Total Multiplier`);const v=r.length?r.map(u=>`<li class="text-white font-light mb-1">${u}</li>`).join(""):'<li class="text-white font-light">None</li>';t.innerHTML=` 
        <p>XP required for level up: </p> 
        <p class="mb-4"><span class='text-white font-light'>${l[1].xp}</span></p>
        <p>Total XP needed:</p>
        <p class="mb-4"><span class='text-white font-light'>${l[1].totalXP}</span></p>
        <p>Average XP per player:</p>
        <p class="mb-4"><span class='text-white font-light'>${l[1].totalXP/10}</span></p>
        <p>Current Level Reward:</p>
        <p class="mb-4"><span class='text-white font-light'>${l[1].reward}</span></p>
        <p>All Rewards Met: </p>
        <ul class="md:w-1/3 list-disc pl-6 mt-2 mb-4 grid grid-cols-2 md:grid-cols-3">
            ${v}
        </ul>
    `}function L(e,t,l){let o=0,s=0,a=0,i=0,c=0,d=0,n=0;return e.filter(([p])=>{const r=parseInt(p.replace("lvl",""));return l?r<t+1:r}).map(p=>p[1]).forEach(p=>{p.reward&&p.reward.split(",").map(r=>r.trim()).forEach(r=>{if(r.includes("x Multiplier")){const m=r.split("x Multiplier")[0].trim(),b=parseFloat(m);isNaN(b)||(n=+b)}const v=r.match(X.gems);if(v){let m=v[1];m.endsWith("k")&&(m=parseFloat(m)*1e3),o+=parseFloat(m);return}const u=r.match(X.petFood);if(u){let m=u[1];m.endsWith("k")&&(m=parseFloat(m)*1e3),s+=parseFloat(m);return}const h=r.match(X.other);if(h){let m=h[1]?parseInt(h[1]):h[3]?parseInt(h[3]):1;/Small\s*Box/i.test(r)?a+=m:/Big\s*Box/i.test(r)?i+=m:/Club\s*Box/i.test(r)?c+=m:/Epic\s*Egg/i.test(r)&&(d+=m)}})}),{totalGems:o,totalPetfood:s,smallBoxes:a,bigBoxes:i,clubBoxes:c,epicEggs:d,totalMultiplier:n}}function Ue(){let e=Number(document.getElementById("current-level").value);const t=Number(document.getElementById("target-level").value),l=document.getElementById("current-level-error"),o=document.getElementById("target-level-error");e<1|e>50&&(l.innerText="Level must be from 1-50"),t<1|t>50&&(o.innerText="Level must be from 1-50");const s=document.getElementById("totalXP");let a=clubLvlsArray.find(([g])=>g===`lvl${e}`),i=a[1].xp;const c=a[1].totalXP,d=c-i;let n=c-1;e===1&&(n=c),console.log("Final XP for current level:",i);const p=clubLvlsArray.filter(([g])=>{const w=parseInt(g.replace("lvl",""));return w>e&&w<=t});let r=p.map(([g,w])=>w.xp);const{totalGems:v,totalPetfood:u,smallBoxes:h,bigBoxes:m,clubBoxes:b,epicEggs:x,totalMultiplier:y}=L(p,t,!1),P=g=>g>=1e3?(g/1e3).toFixed(2)+"k":g,f=[];h&&f.push(`${h} Small Boxes`),m&&f.push(`${m} Big Boxes`),b&&f.push(`${b} Club Boxes`),x&&f.push(`${x} Epic Egg${x>1?"s":""}`),v&&f.push(`${P(v)} Gems`),u&&f.push(`${P(u)} Petfood`),y&&f.push(`${y}x Total Multiplier`);const T=f.length?f.map(g=>`<li class="text-white font-light mb-1">${g}</li>`).join(""):'<li class="text-white font-light">None</li>',B=r.reduce((g,w)=>g+w,0);s.innerHTML=`
        <p>Your Club's Total XP</p> 
        <p class="mb-5"><span class='text-white font-light'>${d} - ${n}</span></p>
        <p>XP required <span class="text-white">(Level ${e} -> ${t})</span></p>
        <p class="mb-5"><span class='text-white font-light'>${B}</span></p>
        <p>Average XP Per Person Required <span class="text-white">(Level ${e} -> ${t})</span></p>
        <p class="mb-5"><span class='text-white font-light'>${B/10}</span></p>
        <p>Rewards Gained <span class="text-white">(Level ${e} -> ${t})</span></p> 
        <p class="mb-1"><span class='text-white font-light'>${T}</span></p>
    `}const De=Object.freeze(Object.defineProperty({__proto__:null,calculateAWvsSolo:qe,calculateProfit:ze,calculateRewards:L,calculateXPTotal:Ue,levelSearch:Ye},Symbol.toStringTag,{value:"Module"})),K={"v0.1.0":{title:"Initial Release",date:"11/24/2024",url:"https://github.com/AtlasWiki/ev/releases/tag/v0.1.0"},"v0.2.0":{title:"Club Rewards",date:"11/25/2024",url:"https://github.com/AtlasWiki/ev/releases/tag/v0.2.0"},"v0.3.0":{title:"Accessibility and Bug fixes",date:"11/25/2024",url:"https://github.com/AtlasWiki/ev/releases/tag/v0.3.0"}};function Ke(){const e=document.getElementById("changelog-item"),t=Object.entries(K).map(([l,o])=>`
        <div class="mt-1">
           <a href="${o.url}" class="text-blue-400 underline hover:no-underline">
                ${l} - ${o.title} (${o.date})
           </a>
        </div>
    `).join("");e.innerHTML=t}const Qe=Object.freeze(Object.defineProperty({__proto__:null,changelog:K,createLog:Ke},Symbol.toStringTag,{value:"Module"})),Q=Object.entries(D),Ze=Object.entries(O),Je=Object.entries(F);function et(e){(Array.isArray(e)?e:[e]).forEach(t=>{let l=document.getElementById(t);l&&(l.innerHTML="",l.value="")})}const tt=Object.freeze(Object.defineProperty({__proto__:null,clearValue:et,clubLvlsArray:Q,descriptionItems:Je,sectionItems:Ze},Symbol.toStringTag,{value:"Module"})),S=document.getElementById("table-body-1"),j=document.getElementById("table-body-2");function lt(){alert("test")}function I(){const e=document.getElementById("clubRewards").value,t=Number(document.getElementById("min-level-input").value),l=Number(document.getElementById("max-level-input").value);return Q.filter(([o,s])=>{let a=s.reward;const i=parseInt(o.match(/\d+/)[0]),c=i>=t&&i<=l;return a.includes(e)&&c?!0:!!(e==="All"&&c)})}function G(e,t){const l=document.createElement("tr"),o=`<td class="md:py-4 py-2 px-1">${e.replace("lvl","")}</td>`,s=`<td class="md:py-4 py-2 px-1">${t.xp}</td>`,a=`<td class="md:py-4 py-2 px-1">${t.totalXP}</td>`,i=`<td class="md:py-4 py-2 px-1">${t.reward}</td>`;return l.innerHTML=o+s+a+i,l}function Z(){S.innerHTML="",j.innerHTML="";const e=I(),t=1,l=document.getElementById("min-level-input");l.min=t;const o=document.getElementById("max-level-input");o.min=t,ee();const s=Math.ceil(e.length/2),a=e.slice(0,s),i=e.slice(s);a.forEach(([c,d])=>{const n=G(c,d);S.appendChild(n)}),i.forEach(([c,d])=>{const n=G(c,d);j.appendChild(n)}),J()}Z();function J(){const e=document.getElementById("club-entry-result"),{totalGems:t,totalPetfood:l,smallBoxes:o,bigBoxes:s,clubBoxes:a,epicEggs:i,totalMultiplier:c}=L(I(),I(),!1),d=r=>r>=1e3?(r/1e3).toFixed(1)+"k":r,n=[];o&&n.push(`${o} Small Boxes`),s&&n.push(`${s} Big Boxes`),a&&n.push(`${a} Club Boxes`),i&&n.push(`${i} Epic Egg${i>1?"s":""}`),t&&n.push(`${d(t)} Gems`),l&&n.push(`${d(l)} Petfood`),c&&n.push(`${c}x Total Multiplier`);const p=n.length?n.map(r=>`<li class="text-white font-light mb-1">${r}</li>`).join(""):'<li class="text-white font-light">None</li>';e.innerHTML=` 
        <p class="text-[#00b3b3] font-semibold">Total Rewards: </p>
        <ul class="md:w-1/3 list-disc pl-6 mt-2 mb-4 grid grid-cols-2 md:grid-cols-3">
            ${p}
        </ul>
    `}function ot(e,t){const l=document.getElementById(e),o=t.value;l.innerText=o}function ee(){const e=document.getElementById("min-level-range"),t=document.getElementById("max-level-range"),l=document.getElementById("min-level-input").value,o=document.getElementById("max-level-input").value;e.innerText=l,t.innerText=o}function st(e){const t=O[e],l=U[e],o=document.getElementById(l),s=F[t];o.innerHTML=`
        <div>
            <button onclick="showCurrentSection('${e}')" class="bg-[#3a3a3a] hover:bg-[#4b4b4b] transition-all duration-300 w-full p-2 md:p-5 font-semibold text-xl rounded-md flex items-center justify-between">
                <div class="flex justify-center items-center gap-2">
                    <svg id="${e}ChevronIcon" class="rotate-180 w-6 h-6 transform transition-transform duration-300" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M19 9l-7 7-7-7" />
                    </svg>
                    <span>Description</span>
                </div>
            </button>

            <section id="${t}" class="mt-2 p-2 mb-5">
                <p class="leading-8 text-md md:w-3/4">
                    ${s}
                </p>
            </section>
        </div>
    `}const rt=Object.freeze(Object.defineProperty({__proto__:null,createDescription:st,createRow:G,displayTableResult:J,filterEntries:I,initialLevelRangeValueUpdate:ee,tableBody1:S,tableBody2:j,test2:lt,updateLevelRangeValue:ot,updateTables:Z},Symbol.toStringTag,{value:"Module"})),at=[Se,De,We,Qe,tt,rt];at.forEach(e=>{Object.keys(e).forEach(t=>{window[t]=e[t]})});
